# Generated by Django 4.1 on 2022-08-27 02:13

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='addresses',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='addresses',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='addresses',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='addresses',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='addresses',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='addresses',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='addresses',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='addresses',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='addresses',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='addresses',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='addresses',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='common.addresses', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='addresses',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='addresses',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='addresses',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='back_matter',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='back_matter',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='back_matter',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='back_matter',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='back_matter',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='back_matter',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='back_matter',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='back_matter',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='back_matter',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='back_matter',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='back_matter',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='common.back_matter', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='back_matter',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='back_matter',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='back_matter',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='base64',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='base64',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='base64',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='base64',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='base64',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='base64',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='base64',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='base64',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='base64',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='base64',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='base64',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='common.base64', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='base64',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='base64',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='base64',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='citations',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='citations',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='citations',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='citations',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='citations',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='citations',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='citations',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='citations',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='citations',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='citations',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='citations',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='common.citations', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='citations',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='citations',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='citations',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='document_ids',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='document_ids',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='document_ids',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='document_ids',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='document_ids',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='document_ids',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='document_ids',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='document_ids',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='document_ids',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='document_ids',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='document_ids',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='common.document_ids', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='document_ids',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='document_ids',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='document_ids',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='emails',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='emails',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='emails',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='emails',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='emails',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='emails',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='emails',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='emails',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='emails',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='emails',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='emails',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='common.emails', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='emails',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='emails',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='emails',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='hashes',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='hashes',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='hashes',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='hashes',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='hashes',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='hashes',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='hashes',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='hashes',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='hashes',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='hashes',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='hashes',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='common.hashes', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='hashes',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='hashes',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='hashes',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='links',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='links',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='links',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='links',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='links',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='links',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='links',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='links',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='links',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='links',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='links',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='common.links', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='links',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='links',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='links',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='locations',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='locations',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='locations',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='locations',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='locations',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='locations',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='locations',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='locations',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='locations',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='locations',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='locations',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='common.locations', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='locations',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='locations',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='locations',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='common.metadata', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='organizations',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='organizations',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='organizations',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='organizations',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='organizations',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='organizations',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='organizations',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='organizations',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='organizations',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='organizations',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='organizations',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='common.organizations', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='organizations',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='organizations',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='organizations',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='parties',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='parties',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='parties',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='parties',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='parties',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='parties',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='parties',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='parties',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='parties',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='parties',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='parties',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='common.parties', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='parties',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='parties',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='parties',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='port_ranges',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='port_ranges',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='port_ranges',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='port_ranges',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='port_ranges',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='port_ranges',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='port_ranges',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='port_ranges',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='port_ranges',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='port_ranges',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='port_ranges',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='common.port_ranges', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='port_ranges',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='port_ranges',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='port_ranges',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='props',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='props',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='props',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='props',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='props',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='props',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='props',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='props',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='props',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='props',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='props',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='common.props', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='props',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='props',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='props',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='protocols',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='protocols',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='protocols',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='protocols',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='protocols',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='protocols',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='protocols',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='protocols',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='protocols',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='protocols',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='protocols',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='common.protocols', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='protocols',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='protocols',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='protocols',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='resources',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='resources',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='resources',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='resources',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='resources',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='resources',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='resources',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='resources',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='resources',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='resources',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='resources',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='common.resources', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='resources',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='resources',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='resources',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='responsible_parties',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='responsible_parties',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='responsible_parties',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='responsible_parties',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='responsible_parties',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='responsible_parties',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='responsible_parties',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='responsible_parties',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='responsible_parties',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='responsible_parties',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='responsible_parties',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='common.responsible_parties', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='responsible_parties',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='responsible_parties',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='responsible_parties',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='revisions',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='revisions',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='revisions',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='revisions',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='revisions',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='revisions',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='revisions',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='revisions',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='revisions',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='revisions',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='revisions',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='common.revisions', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='revisions',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='revisions',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='revisions',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='rlinks',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='rlinks',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='rlinks',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='rlinks',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='rlinks',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='rlinks',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='rlinks',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='rlinks',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='rlinks',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='rlinks',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='rlinks',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='common.rlinks', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='rlinks',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='rlinks',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='rlinks',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='roles',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='roles',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='roles',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='roles',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='roles',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='roles',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='roles',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='roles',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='roles',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='roles',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='roles',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='common.roles', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='roles',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='roles',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='roles',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='telephone_numbers',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='telephone_numbers',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='telephone_numbers',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='telephone_numbers',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='telephone_numbers',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='telephone_numbers',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='telephone_numbers',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='telephone_numbers',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='telephone_numbers',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='telephone_numbers',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='telephone_numbers',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='common.telephone_numbers', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='telephone_numbers',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='telephone_numbers',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='telephone_numbers',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
    ]
