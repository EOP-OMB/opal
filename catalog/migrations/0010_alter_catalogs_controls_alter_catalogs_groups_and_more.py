# Generated by Django 4.2 on 2023-06-20 18:58

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0008_alter_back_matter_resources_alter_citations_links_and_more'),
        ('catalog', '0009_alter_catalogs_catalog_uuid'),
    ]

    operations = [
        migrations.AlterField(
            model_name='catalogs',
            name='controls',
            field=models.ManyToManyField(to='catalog.controls', verbose_name='Controls'),
        ),
        migrations.AlterField(
            model_name='catalogs',
            name='groups',
            field=models.ManyToManyField(to='catalog.groups', verbose_name='Groups'),
        ),
        migrations.AlterField(
            model_name='catalogs',
            name='params',
            field=models.ManyToManyField(help_text='Parameters that should be applied to all Controls in the Catalog', to='catalog.params', verbose_name='Global Catalog Parameters'),
        ),
        migrations.AlterField(
            model_name='constraints',
            name='tests',
            field=models.ManyToManyField(help_text='A test expression which is expected to be evaluated by a tool', to='catalog.tests', verbose_name='Constraint Test'),
        ),
        migrations.AlterField(
            model_name='controls',
            name='control_enhancements',
            field=models.ManyToManyField(help_text='Additional sub-controls', to='catalog.controls', verbose_name='Control Enhancements'),
        ),
        migrations.AlterField(
            model_name='controls',
            name='links',
            field=models.ManyToManyField(null=True, to='common.links', verbose_name='Links'),
        ),
        migrations.AlterField(
            model_name='controls',
            name='params',
            field=models.ManyToManyField(help_text='Parameters provide a mechanism for the dynamic assignment of value(s) in a control.', to='catalog.params', verbose_name='Control Parameters'),
        ),
        migrations.AlterField(
            model_name='controls',
            name='parts',
            field=models.ManyToManyField(help_text="A partition of a control's definition or a child of another part.", to='catalog.parts', verbose_name='Parts'),
        ),
        migrations.AlterField(
            model_name='groups',
            name='controls',
            field=models.ManyToManyField(help_text='A structured information object representing a security or privacy control. Each security or privacy control within the Catalog is defined by a distinct control instance.', to='catalog.controls', verbose_name='Controls'),
        ),
        migrations.AlterField(
            model_name='groups',
            name='links',
            field=models.ManyToManyField(null=True, to='common.links', verbose_name='Links'),
        ),
        migrations.AlterField(
            model_name='groups',
            name='params',
            field=models.ManyToManyField(help_text='Parameters that should be applied to all Controls in the Group', to='catalog.params', verbose_name='Global Group Parameters'),
        ),
        migrations.AlterField(
            model_name='groups',
            name='parts',
            field=models.ManyToManyField(help_text="A partition of a control's definition or a child of another part.", to='catalog.parts', verbose_name='Parts'),
        ),
        migrations.AlterField(
            model_name='groups',
            name='sub_groups',
            field=models.ManyToManyField(help_text='A group of controls, or of groups of controls.', to='catalog.groups', verbose_name='Sub Groups'),
        ),
        migrations.AlterField(
            model_name='params',
            name='constraints',
            field=models.ManyToManyField(help_text='A formal or informal expression of a constraint or test', to='catalog.constraints', verbose_name='Constraints'),
        ),
        migrations.AlterField(
            model_name='params',
            name='guidelines',
            field=models.ManyToManyField(help_text='A prose statement that provides a recommendation for the use of a parameter.', to='catalog.guidelines', verbose_name='Guidelines'),
        ),
        migrations.AlterField(
            model_name='params',
            name='links',
            field=models.ManyToManyField(null=True, to='common.links', verbose_name='Links'),
        ),
        migrations.AlterField(
            model_name='parts',
            name='links',
            field=models.ManyToManyField(null=True, to='common.links', verbose_name='Links'),
        ),
        migrations.AlterField(
            model_name='parts',
            name='sub_parts',
            field=models.ManyToManyField(help_text='A part can have child parts allowing for arbitrary nesting of prose content (e.g., statement hierarchy).', to='catalog.parts', verbose_name='Sub Parts'),
        ),
    ]
