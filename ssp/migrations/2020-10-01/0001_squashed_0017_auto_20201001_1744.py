# Generated by Django 3.0.7 on 2020-10-01 22:54

from django.db import migrations, models
import django.db.models.deletion
import ssp.models.base_classes_and_fields
import uuid


class Migration(migrations.Migration):

    replaces = [('ssp', '0001_squashed_0006_system_control_information_system'), ('ssp', '0002_auto_20200825_1302'), ('ssp', '0003_auto_20200825_1305'), ('ssp', '0004_auto_20200825_1339'), ('ssp', '0005_auto_20200825_1349'), ('ssp', '0006_auto_20200825_1406'), ('ssp', '0007_delete_leveraged_authorization'), ('ssp', '0008_auto_20200825_2218'), ('ssp', '0009_auto_20200826_0653'), ('ssp', '0010_auto_20200826_0700'), ('ssp', '0011_auto_20200826_0712'), ('ssp', '0012_auto_20200929_1641'), ('ssp', '0013_auto_20200929_1826'), ('ssp', '0014_auto_20200930_1432'), ('ssp', '0015_auto_20200930_1444'), ('ssp', '0016_auto_20201001_1715'), ('ssp', '0017_auto_20201001_1744')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='A title for display and navigation', max_length=255)),
                ('type', models.CharField(max_length=100)),
                ('postal_address', ssp.models.base_classes_and_fields.customTextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=2)),
                ('postal_code', models.CharField(max_length=25)),
                ('country', models.CharField(max_length=100)),
                ('desc', ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description')),
                ('remarks', ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments')),
                ('short_name', models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annotationID', models.CharField(max_length=25)),
                ('ns', models.CharField(max_length=100)),
                ('value', ssp.models.base_classes_and_fields.customTextField()),
                ('remarks', ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments')),
                ('desc', ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description')),
                ('short_name', models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255)),
                ('title', models.CharField(blank=True, help_text='A title for display and navigation', max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='control_parameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('control_parameter_id', models.CharField(max_length=25)),
                ('value', ssp.models.base_classes_and_fields.customTextField()),
                ('desc', ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description')),
                ('remarks', ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments')),
                ('short_name', models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255)),
                ('title', models.CharField(blank=True, help_text='A title for display and navigation', max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='element_property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('property_id', models.CharField(blank=True, max_length=25)),
                ('ns', models.CharField(blank=True, max_length=25)),
                ('prop_class', models.CharField(blank=True, max_length=25)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('type', models.CharField(choices=[('work', 'Work'), ('personal', 'Personal'), ('shared', 'Shared'), ('service', 'Service'), ('other', 'Other')], default='work', max_length=50)),
                ('supports_rich_text', models.BooleanField(default=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='hashed_value',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', ssp.models.base_classes_and_fields.customTextField()),
                ('algorithm', models.CharField(max_length=100)),
                ('desc', ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description')),
                ('remarks', ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments')),
                ('short_name', models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255)),
                ('title', models.CharField(blank=True, help_text='A title for display and navigation', max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='information_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='A title for display and navigation', max_length=255)),
                ('confidentialityImpact', models.CharField(choices=[('High', 'High'), ('Moderate', 'Moderate'), ('Low', 'Low')], max_length=50)),
                ('integrityImpact', models.CharField(choices=[('High', 'High'), ('Moderate', 'Moderate'), ('Low', 'Low')], max_length=50)),
                ('availabilityImpact', models.CharField(choices=[('High', 'High'), ('Moderate', 'Moderate'), ('Low', 'Low')], max_length=50)),
                ('desc', ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description')),
                ('remarks', ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments')),
                ('short_name', models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='inventory_item_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_item_type_name', models.CharField(max_length=100)),
                ('use', ssp.models.base_classes_and_fields.customTextField()),
                ('description', ssp.models.base_classes_and_fields.customTextField()),
                ('remarks', ssp.models.base_classes_and_fields.customTextField()),
                ('annotations', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.annotation')),
            ],
        ),
        migrations.CreateModel(
            name='link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('href', models.CharField(max_length=255)),
                ('requires_authentication', models.BooleanField(default=False)),
                ('rel', models.CharField(blank=True, max_length=255)),
                ('mediaType', models.CharField(blank=True, max_length=255)),
                ('hash', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='ssp.hashed_value')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locationID', models.CharField(max_length=25, verbose_name='location description')),
                ('remarks', ssp.models.base_classes_and_fields.customTextField()),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ssp.address')),
                ('annotations', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.annotation')),
                ('emailAddresses', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.email')),
                ('links', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.link')),
                ('properties', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.element_property')),
            ],
        ),
        migrations.CreateModel(
            name='nist_control',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.CharField(max_length=2)),
                ('group_title', models.CharField(max_length=50)),
                ('control_id', models.CharField(max_length=7, unique=True)),
                ('source', models.CharField(max_length=30)),
                ('control_title', models.CharField(max_length=255)),
                ('label', models.CharField(max_length=10, unique=True)),
                ('sort_id', models.CharField(max_length=10)),
                ('status', models.CharField(blank=True, max_length=30)),
                ('links', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.link')),
            ],
        ),
        migrations.CreateModel(
            name='nist_control_parameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('param_id', models.CharField(max_length=255)),
                ('param_type', models.CharField(choices=[('label', 'Label'), ('description', 'Description'), ('constraint', 'Constraint'), ('guidance', 'Guidance'), ('value', 'Value'), ('select', 'Select')], max_length=255)),
                ('param_text', models.CharField(blank=True, max_length=255)),
                ('param_depends_on', models.CharField(blank=True, max_length=255)),
                ('param_class', models.CharField(blank=True, max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_name', models.CharField(max_length=100)),
                ('short_name', models.CharField(max_length=25)),
                ('remarks', ssp.models.base_classes_and_fields.customTextField()),
                ('annotations', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.annotation')),
                ('email_addresses', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.email')),
                ('links', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.link')),
                ('locations', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.location')),
                ('properties', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.element_property')),
            ],
        ),
        migrations.CreateModel(
            name='person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('short_name', models.CharField(max_length=25)),
                ('remarks', ssp.models.base_classes_and_fields.customTextField()),
                ('annotations', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.annotation')),
                ('email_addresses', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.email')),
                ('links', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.link')),
                ('locations', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.location')),
                ('organizations', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.organization')),
                ('properties', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.element_property')),
            ],
        ),
        migrations.CreateModel(
            name='port_range',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.IntegerField()),
                ('end', models.IntegerField()),
                ('transport', models.CharField(max_length=40)),
                ('desc', ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description')),
                ('remarks', ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments')),
                ('short_name', models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255)),
                ('title', models.CharField(blank=True, help_text='A title for display and navigation', max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='protocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='A title for display and navigation', max_length=255)),
                ('portRanges', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.port_range')),
                ('desc', ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description')),
                ('remarks', ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments')),
                ('short_name', models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=30)),
                ('remarks', ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments')),
                ('desc', ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description')),
                ('short_name', models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255)),
                ('title', models.CharField(blank=True, help_text='A title for display and navigation', max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='system_control',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('control_status', models.CharField(choices=[('Implemented', 'Implemented'), ('Partially Implemented ', 'Partially Implemented'), ('Planned ', 'Planned'), ('Alternative Implementation', 'Alternative Implementation'), ('Not Applicable', 'Not Applicable'), ('Other than Implemented', 'Other than Implemented')], max_length=100)),
                ('control_origination', models.CharField(choices=[('Service Provider Corporate ', 'Service Provider Corporate'), ('Service Provider System Specific ', 'Service Provider System Specific'), ('Service Provider Hybrid (Corporate and System Specific)', 'Service Provider Hybrid'), ('Configured by Customer (Customer System Specific) ', 'Configured by Customer'), ('Provided by Customer (Customer System Specific) ', 'Provided by Customer'), ('Shared (Service Provider and Customer Responsibility) ', 'Shared'), ('Inherited ', 'Inherited'), ('N/A', 'N/A')], max_length=100)),
                ('remarks', ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments')),
                ('annotations', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.annotation')),
                ('links', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.link')),
                ('nist_control', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='ssp.nist_control')),
                ('properties', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.element_property')),
                ('desc', ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description')),
                ('short_name', models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255)),
                ('title', models.CharField(blank=True, help_text='A title for display and navigation', max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('inheritable', models.BooleanField(default=False)),
                ('control_parameters', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.control_parameter')),
            ],
        ),
        migrations.CreateModel(
            name='system_inventory_item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_special_configuration_settings', ssp.models.base_classes_and_fields.customTextField()),
                ('remarks', ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments')),
                ('annotations', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.annotation')),
                ('inventory_item_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ssp.inventory_item_type')),
                ('links', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.link')),
                ('properties', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.element_property')),
                ('desc', ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description')),
                ('short_name', models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255)),
                ('title', models.CharField(blank=True, help_text='A title for display and navigation', max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='telephone_number',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=25)),
                ('type', models.CharField(max_length=25)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='user_function',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='A title for display and navigation', max_length=255)),
                ('desc', ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description')),
                ('remarks', ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments')),
                ('short_name', models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='user_privilege',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='A title for display and navigation', max_length=255)),
                ('functionsPerformed', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.user_function')),
                ('desc', ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description')),
                ('remarks', ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments')),
                ('short_name', models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='user_role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annotations', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.annotation')),
                ('links', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.link')),
                ('properties', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.element_property')),
                ('user_privileges', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.user_privilege')),
                ('desc', ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description')),
                ('remarks', ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments')),
                ('short_name', models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255)),
                ('title', models.CharField(blank=True, help_text='A title for display and navigation', max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='system_user',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roles', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.user_role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ssp.person')),
                ('desc', ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description')),
                ('remarks', ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments')),
                ('short_name', models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255)),
                ('title', models.CharField(blank=True, help_text='A title for display and navigation', max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='system_service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_purpose', ssp.models.base_classes_and_fields.customTextField()),
                ('remarks', ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments')),
                ('annotations', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.annotation')),
                ('links', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.link')),
                ('properties', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.element_property')),
                ('protocols', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.protocol')),
                ('service_information_types', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.information_type')),
                ('desc', ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description')),
                ('short_name', models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255)),
                ('title', models.CharField(blank=True, help_text='A title for display and navigation', max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='person',
            name='telephone_numbers',
            field=ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.telephone_number'),
        ),
        migrations.AddField(
            model_name='organization',
            name='telephone_numbers',
            field=ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.telephone_number'),
        ),
        migrations.AddField(
            model_name='nist_control',
            name='parameters',
            field=ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.nist_control_parameter'),
        ),
        migrations.AddField(
            model_name='location',
            name='telephoneNumbers',
            field=ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.telephone_number'),
        ),
        migrations.AddField(
            model_name='inventory_item_type',
            name='baseline_configuration',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='baseline_configuration', to='ssp.link'),
        ),
        migrations.AddField(
            model_name='inventory_item_type',
            name='links',
            field=ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.link'),
        ),
        migrations.AddField(
            model_name='inventory_item_type',
            name='properties',
            field=ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.element_property'),
        ),
        migrations.AddField(
            model_name='inventory_item_type',
            name='responsibleRoles',
            field=ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.user_role'),
        ),
        migrations.CreateModel(
            name='control_statement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('control_statement_id', models.CharField(max_length=25)),
                ('control_statement_text', ssp.models.base_classes_and_fields.customTextField()),
                ('remarks', ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments')),
                ('annotations', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.annotation')),
                ('control_statement_responsible_roles', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.user_role')),
                ('links', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.link')),
                ('properties', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.element_property')),
                ('desc', ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description')),
                ('short_name', models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255)),
                ('title', models.CharField(blank=True, help_text='A title for display and navigation', max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.AlterField(
            model_name='nist_control',
            name='control_id',
            field=models.CharField(max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='nist_control',
            name='group_id',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='nist_control',
            name='group_title',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='nist_control',
            name='label',
            field=models.CharField(max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='nist_control',
            name='sort_id',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='nist_control',
            name='source',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='nist_control',
            name='status',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.CreateModel(
            name='attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment_type', models.CharField(choices=[('image', 'Image'), ('diagram', 'Diagram'), ('document', 'Document'), ('other', 'Other File Type')], max_length=50)),
                ('attachment', models.FileField(upload_to='')),
                ('filename', models.CharField(blank=True, max_length=100)),
                ('mediaType', models.CharField(blank=True, max_length=100)),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('annotations', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.annotation')),
                ('hash', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='ssp.hashed_value')),
                ('links', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.link')),
                ('properties', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.element_property')),
                ('desc', ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description')),
                ('remarks', ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments')),
                ('short_name', models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255)),
                ('title', models.CharField(blank=True, help_text='A title for display and navigation', max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='location',
            name='locationID',
        ),
        migrations.RemoveField(
            model_name='location',
            name='remarks',
        ),
        migrations.RemoveField(
            model_name='organization',
            name='organization_name',
        ),
        migrations.RemoveField(
            model_name='organization',
            name='remarks',
        ),
        migrations.RemoveField(
            model_name='organization',
            name='short_name',
        ),
        migrations.RemoveField(
            model_name='person',
            name='remarks',
        ),
        migrations.AddField(
            model_name='location',
            name='desc',
            field=ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description'),
        ),
        migrations.AddField(
            model_name='location',
            name='remarks',
            field=ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments'),
        ),
        migrations.AddField(
            model_name='location',
            name='short_name',
            field=models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255),
        ),
        migrations.AddField(
            model_name='location',
            name='title',
            field=models.CharField(blank=True, help_text='A title for display and navigation', max_length=255),
        ),
        migrations.AddField(
            model_name='organization',
            name='desc',
            field=ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description'),
        ),
        migrations.AddField(
            model_name='organization',
            name='remarks',
            field=ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments'),
        ),
        migrations.AddField(
            model_name='organization',
            name='short_name',
            field=models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255),
        ),
        migrations.AddField(
            model_name='organization',
            name='title',
            field=models.CharField(blank=True, help_text='A title for display and navigation', max_length=255),
        ),
        migrations.AddField(
            model_name='person',
            name='desc',
            field=ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description'),
        ),
        migrations.AddField(
            model_name='person',
            name='remarks',
            field=ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments'),
        ),
        migrations.AddField(
            model_name='person',
            name='title',
            field=models.CharField(blank=True, help_text='A title for display and navigation', max_length=255),
        ),
        migrations.RemoveField(
            model_name='inventory_item_type',
            name='description',
        ),
        migrations.RemoveField(
            model_name='inventory_item_type',
            name='inventory_item_type_name',
        ),
        migrations.AddField(
            model_name='inventory_item_type',
            name='desc',
            field=ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description'),
        ),
        migrations.AddField(
            model_name='inventory_item_type',
            name='short_name',
            field=models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255),
        ),
        migrations.AddField(
            model_name='inventory_item_type',
            name='title',
            field=models.CharField(blank=True, help_text='A title for display and navigation', max_length=255),
        ),
        migrations.AlterField(
            model_name='inventory_item_type',
            name='remarks',
            field=ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments'),
        ),
        migrations.AddField(
            model_name='inventory_item_type',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AddField(
            model_name='location',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AddField(
            model_name='organization',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AddField(
            model_name='person',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.CreateModel(
            name='system_component',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component_type', models.CharField(max_length=100)),
                ('component_title', models.CharField(max_length=100)),
                ('component_description', ssp.models.base_classes_and_fields.customTextField()),
                ('annotations', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.annotation')),
                ('component_information_types', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.information_type')),
                ('component_responsible_roles', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.user_role')),
                ('component_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='ssp.status')),
                ('links', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.link')),
                ('properties', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.element_property')),
                ('desc', ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description')),
                ('remarks', ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments')),
                ('short_name', models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255)),
                ('title', models.CharField(blank=True, help_text='A title for display and navigation', max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='system_interconnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remarks', ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments')),
                ('annotations', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.annotation')),
                ('interconnection_responsible_roles', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.user_role')),
                ('links', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.link')),
                ('properties', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.element_property')),
                ('desc', ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description')),
                ('short_name', models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255)),
                ('title', models.CharField(blank=True, help_text='A title for display and navigation', max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='nist_control',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.CreateModel(
            name='control_baseline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                'controls', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.nist_control')),
                ('desc', ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description',
                                                                            verbose_name='description')),
                ('remarks', ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments')),
                ('short_name',
                 models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255)),
                ('title', models.CharField(blank=True, help_text='A title for display and navigation', max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='system_security_plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='A title for display and navigation', max_length=255)),
                ('published', models.DateTimeField()),
                ('lastModified', models.DateTimeField()),
                ('version', models.CharField(default='1.0.0', max_length=25)),
                ('oscalVersion', models.CharField(default='1.0.0', max_length=10)),
                ('remarks', ssp.models.base_classes_and_fields.customTextField(help_text='general notes or comments')),
                ('controls', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.system_control')),
                ('links', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.link')),
                ('properties', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.element_property')),
                ('system_components', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.system_component')),
                ('system_interconnections', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.system_interconnection')),
                ('system_inventory_items', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.system_inventory_item')),
                ('system_services', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.system_service')),
                ('system_users', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.system_user')),
                ('annotations', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.annotation')),
                ('desc', ssp.models.base_classes_and_fields.customTextField(help_text='A short textual description', verbose_name='description')),
                ('short_name', models.CharField(blank=True, help_text='A common name, short name, or acronym', max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('additional_selected_controls', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.nist_control')),
                ('control_baseline', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='ssp.control_baseline')),
                ('leveraged_authorization', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.system_security_plan')),
                ('authorization_boundary_diagram', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='system_authorization_boundary_diagram', to='ssp.attachment')),
                ('data_flow_diagram', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='system_data_flow_diagram', to='ssp.attachment')),
                ('date_authorized', models.DateTimeField(null=True)),
                ('network_architecture_diagram', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='system_network_architecture_diagram', to='ssp.attachment')),
                ('security_objective_availability', models.CharField(blank=True, choices=[('high', 'High'), ('moderate', 'Moderate'), ('low', 'Low')], max_length=10)),
                ('security_objective_confidentiality', models.CharField(blank=True, choices=[('high', 'High'), ('moderate', 'Moderate'), ('low', 'Low')], max_length=10)),
                ('security_objective_integrity', models.CharField(blank=True, choices=[('high', 'High'), ('moderate', 'Moderate'), ('low', 'Low')], max_length=10)),
                ('security_sensitivity_level', models.CharField(blank=True, choices=[('high', 'High'), ('moderate', 'Moderate'), ('low', 'Low')], max_length=10)),
                ('information_types', ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.information_type')),
                ('system_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='ssp.status')),
            ],
        ),
        migrations.CreateModel(
            name='nist_control_statement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statement_type', models.CharField(max_length=255)),
                ('statement_text', ssp.models.base_classes_and_fields.customTextField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('nist_control', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='ssp.nist_control')),
            ],
        ),
        migrations.AddField(
            model_name='system_control',
            name='control_statements',
            field=ssp.models.base_classes_and_fields.customMany2ManyField(blank=True, to='ssp.control_statement'),
        ),
        migrations.RemoveField(
            model_name='system_control',
            name='inheritable',
        ),
    ]
