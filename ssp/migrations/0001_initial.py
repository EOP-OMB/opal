# Generated by Django 3.1 on 2020-08-13 14:13

from django.db import migrations, models
import django.db.models.deletion
import ssp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('postal_address', ssp.models.customTextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=2)),
                ('postal_code', models.CharField(max_length=25)),
                ('country', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('annotationID', models.CharField(max_length=25)),
                ('ns', models.CharField(max_length=100)),
                ('value', ssp.models.customTextField()),
                ('remarks', ssp.models.customTextField()),
            ],
        ),
        migrations.CreateModel(
            name='attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment_type', models.CharField(choices=[('image', 'Image'), ('diagram', 'Diagram'), ('document', 'Document'), ('other', 'Other File Type')], max_length=50)),
                ('attachment', models.FileField(upload_to='')),
                ('attachment_title', models.CharField(max_length=100)),
                ('filename', models.CharField(blank=True, max_length=100)),
                ('mediaType', models.CharField(blank=True, max_length=100)),
                ('description', ssp.models.customTextField()),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('remarks', ssp.models.customTextField()),
                ('annotations', ssp.models.customMany2ManyField(blank=True, to='ssp.annotation')),
            ],
        ),
        migrations.CreateModel(
            name='control_parameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('control_parameter_id', models.CharField(max_length=25)),
                ('value', ssp.models.customTextField()),
            ],
        ),
        migrations.CreateModel(
            name='control_statement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('control_statement_id', models.CharField(max_length=25)),
                ('control_statement_text', ssp.models.customTextField()),
                ('remarks', ssp.models.customTextField()),
                ('annotations', ssp.models.customMany2ManyField(blank=True, to='ssp.annotation')),
            ],
        ),
        migrations.CreateModel(
            name='element_property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('property_id', models.CharField(blank=True, max_length=25)),
                ('ns', models.CharField(blank=True, max_length=25)),
                ('prop_class', models.CharField(blank=True, max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('type', models.CharField(choices=[('work', 'Work'), ('personal', 'Personal'), ('shared', 'Shared'), ('service', 'Service'), ('other', 'Other')], default='work', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='hashed_value',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', ssp.models.customTextField()),
                ('algorithm', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='information_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', ssp.models.customTextField()),
                ('confidentialityImpact', models.CharField(choices=[(1, 'High'), (2, 'Moderate'), (3, 'Low')], max_length=50)),
                ('integrityImpact', models.CharField(choices=[(1, 'High'), (2, 'Moderate'), (3, 'Low')], max_length=50)),
                ('availabilityImpact', models.CharField(choices=[(1, 'High'), (2, 'Moderate'), (3, 'Low')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='inventory_item_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_item_type_name', models.CharField(max_length=100)),
                ('use', ssp.models.customTextField()),
                ('description', ssp.models.customTextField()),
                ('remarks', ssp.models.customTextField()),
                ('annotations', ssp.models.customMany2ManyField(blank=True, to='ssp.annotation')),
            ],
        ),
        migrations.CreateModel(
            name='leveraged_authorization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leveraged_system_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=100)),
                ('href', models.CharField(max_length=100)),
                ('requires_authentication', models.BooleanField(default=False)),
                ('rel', models.CharField(blank=True, max_length=100)),
                ('mediaType', models.CharField(blank=True, max_length=100)),
                ('hash', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='ssp.hashed_value')),
            ],
        ),
        migrations.CreateModel(
            name='location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locationID', models.CharField(max_length=25, verbose_name='location description')),
                ('remarks', ssp.models.customTextField()),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ssp.address')),
                ('annotations', ssp.models.customMany2ManyField(blank=True, to='ssp.annotation')),
                ('emailAddresses', ssp.models.customMany2ManyField(blank=True, to='ssp.email')),
                ('links', ssp.models.customMany2ManyField(blank=True, to='ssp.link')),
                ('properties', ssp.models.customMany2ManyField(blank=True, to='ssp.element_property')),
            ],
        ),
        migrations.CreateModel(
            name='nist_control',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.CharField(max_length=2)),
                ('group_title', models.CharField(max_length=50)),
                ('control_id', models.CharField(max_length=7, unique=True)),
                ('source', models.CharField(max_length=30)),
                ('control_title', models.CharField(max_length=255)),
                ('label', models.CharField(max_length=10, unique=True)),
                ('sort_id', models.CharField(max_length=10)),
                ('status', models.CharField(blank=True, max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='nist_control_parameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('param_id', models.CharField(max_length=25)),
                ('param_type', models.CharField(choices=[('label', 'Label'), ('description', 'Description'), ('constraint', 'Constraint'), ('guidance', 'Guidance'), ('value', 'Value'), ('select', 'Select')], max_length=100)),
                ('param_text', models.CharField(blank=True, max_length=100)),
                ('param_depends_on', models.CharField(blank=True, max_length=100)),
                ('param_class', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='nist_control_statement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('control_id', models.CharField(max_length=7)),
                ('statement_type', models.CharField(max_length=100)),
                ('statement_text', ssp.models.customTextField()),
            ],
        ),
        migrations.CreateModel(
            name='organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_name', models.CharField(max_length=100)),
                ('short_name', models.CharField(max_length=25)),
                ('remarks', ssp.models.customTextField()),
                ('annotations', ssp.models.customMany2ManyField(blank=True, to='ssp.annotation')),
                ('email_addresses', ssp.models.customMany2ManyField(blank=True, to='ssp.email')),
                ('links', ssp.models.customMany2ManyField(blank=True, to='ssp.link')),
                ('locations', ssp.models.customMany2ManyField(blank=True, to='ssp.location')),
                ('properties', ssp.models.customMany2ManyField(blank=True, to='ssp.element_property')),
            ],
        ),
        migrations.CreateModel(
            name='person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('short_name', models.CharField(max_length=25)),
                ('remarks', ssp.models.customTextField()),
                ('annotations', ssp.models.customMany2ManyField(blank=True, to='ssp.annotation')),
                ('email_addresses', ssp.models.customMany2ManyField(blank=True, to='ssp.email')),
                ('links', ssp.models.customMany2ManyField(blank=True, to='ssp.link')),
                ('locations', ssp.models.customMany2ManyField(blank=True, to='ssp.location')),
                ('organizations', ssp.models.customMany2ManyField(blank=True, to='ssp.organization')),
                ('properties', ssp.models.customMany2ManyField(blank=True, to='ssp.element_property')),
            ],
        ),
        migrations.CreateModel(
            name='port_range',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.IntegerField()),
                ('end', models.IntegerField()),
                ('transport', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='protocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protocol_id', models.CharField(max_length=25)),
                ('name', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('portRanges', ssp.models.customMany2ManyField(blank=True, to='ssp.port_range')),
            ],
        ),
        migrations.CreateModel(
            name='status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=30)),
                ('description', models.CharField(max_length=80)),
                ('remarks', ssp.models.customTextField()),
            ],
        ),
        migrations.CreateModel(
            name='system_characteristic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_name', models.CharField(max_length=100)),
                ('system_short_name', models.CharField(max_length=25)),
                ('system_description', ssp.models.customTextField()),
                ('date_authorized', models.DateTimeField(null=True)),
                ('security_sensitivity_level', models.CharField(blank=True, choices=[('high', 'High'), ('moderate', 'Moderate'), ('low', 'Low')], max_length=10)),
                ('security_objective_confidentiality', models.CharField(blank=True, choices=[('high', 'High'), ('moderate', 'Moderate'), ('low', 'Low')], max_length=10)),
                ('security_objective_integrity', models.CharField(blank=True, choices=[('high', 'High'), ('moderate', 'Moderate'), ('low', 'Low')], max_length=10)),
                ('security_objective_availability', models.CharField(blank=True, choices=[('high', 'High'), ('moderate', 'Moderate'), ('low', 'Low')], max_length=10)),
                ('remarks', ssp.models.customTextField()),
                ('annotations', ssp.models.customMany2ManyField(blank=True, to='ssp.annotation')),
                ('authorization_boundary_diagram', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='authorization_boundary_diagram', to='ssp.attachment')),
                ('data_flow_diagram', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='data_flow_diagram', to='ssp.attachment')),
                ('leveraged_authorizations', ssp.models.customMany2ManyField(blank=True, to='ssp.leveraged_authorization')),
                ('links', ssp.models.customMany2ManyField(blank=True, to='ssp.link')),
                ('network_architecture_diagram', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='network_architecture_diagram', to='ssp.attachment')),
                ('properties', ssp.models.customMany2ManyField(blank=True, to='ssp.element_property')),
            ],
        ),
        migrations.CreateModel(
            name='system_component',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component_type', models.CharField(max_length=100)),
                ('component_title', models.CharField(max_length=100)),
                ('component_description', ssp.models.customTextField()),
                ('remarks', ssp.models.customTextField()),
                ('annotations', ssp.models.customMany2ManyField(blank=True, to='ssp.annotation')),
            ],
        ),
        migrations.CreateModel(
            name='system_control',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('control_id', models.CharField(max_length=25)),
                ('control_status', models.CharField(choices=[('Implemented', 'Implemented'), ('Partially implemented ', 'Partially implemented'), ('Planned ', 'Planned'), ('Alternative Implementation', 'Alternative Implementation'), ('Not applicable', 'Not applicable')], max_length=100)),
                ('control_origination', models.CharField(choices=[('Service Provider Corporate ', 'Service Provider Corporate'), ('Service Provider System Specific ', 'Service Provider System Specific'), ('Service Provider Hybrid (Corporate and System Specific)', 'Service Provider Hybrid'), ('Configured by Customer (Customer System Specific) ', 'Configured by Customer'), ('Provided by Customer (Customer System Specific) ', 'Provided by Customer'), ('Shared (Service Provider and Customer Responsibility) ', 'Shared'), ('Inherited ', 'Inherited')], max_length=100)),
                ('remarks', ssp.models.customTextField()),
                ('annotations', ssp.models.customMany2ManyField(blank=True, to='ssp.annotation')),
                ('control_parameters', ssp.models.customMany2ManyField(blank=True, to='ssp.control_parameter')),
            ],
        ),
        migrations.CreateModel(
            name='system_control_group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('controls', ssp.models.customMany2ManyField(blank=True, to='ssp.system_control')),
            ],
        ),
        migrations.CreateModel(
            name='system_information_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_information_type_name', models.CharField(blank=True, max_length=255)),
                ('adjusted_confidentiality_impact', models.CharField(blank=True, choices=[('high', 'High'), ('moderate', 'Moderate'), ('low', 'Low')], max_length=10)),
                ('adjusted_integrity_impact', models.CharField(blank=True, choices=[('high', 'High'), ('moderate', 'Moderate'), ('low', 'Low')], max_length=10)),
                ('adjusted_availability_impact', models.CharField(blank=True, choices=[('high', 'High'), ('moderate', 'Moderate'), ('low', 'Low')], max_length=10)),
                ('adjusted_confidentiality_impact_justification', ssp.models.customTextField()),
                ('adjusted_integrity_impact_justification', ssp.models.customTextField()),
                ('adjusted_availability_impact_justification', ssp.models.customTextField()),
                ('information_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ssp.information_type')),
            ],
        ),
        migrations.CreateModel(
            name='system_interconnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_interconnection_id', models.CharField(max_length=25)),
                ('remote_system_name', models.CharField(max_length=100)),
                ('remarks', ssp.models.customTextField()),
                ('annotations', ssp.models.customMany2ManyField(blank=True, to='ssp.annotation')),
            ],
        ),
        migrations.CreateModel(
            name='system_inventory_item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_id', models.CharField(max_length=100)),
                ('item_description', ssp.models.customTextField()),
                ('item_special_configuration_settings', ssp.models.customTextField()),
                ('remarks', ssp.models.customTextField()),
                ('annotations', ssp.models.customMany2ManyField(blank=True, to='ssp.annotation')),
                ('inventory_item_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ssp.inventory_item_type')),
                ('links', ssp.models.customMany2ManyField(blank=True, to='ssp.link')),
                ('properties', ssp.models.customMany2ManyField(blank=True, to='ssp.element_property')),
            ],
        ),
        migrations.CreateModel(
            name='telephone_number',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=25)),
                ('type', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='user_function',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', ssp.models.customTextField()),
            ],
        ),
        migrations.CreateModel(
            name='user_privilege',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', ssp.models.customTextField()),
                ('functionsPerformed', ssp.models.customMany2ManyField(blank=True, to='ssp.user_function')),
            ],
        ),
        migrations.CreateModel(
            name='user_role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('shortName', models.CharField(max_length=25)),
                ('desc', models.CharField(max_length=100)),
                ('remarks', ssp.models.customTextField()),
                ('annotations', ssp.models.customMany2ManyField(blank=True, to='ssp.annotation')),
                ('links', ssp.models.customMany2ManyField(blank=True, to='ssp.link')),
                ('properties', ssp.models.customMany2ManyField(blank=True, to='ssp.element_property')),
                ('user_privileges', ssp.models.customMany2ManyField(blank=True, to='ssp.user_privilege')),
            ],
        ),
        migrations.CreateModel(
            name='system_user',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roles', ssp.models.customMany2ManyField(blank=True, to='ssp.user_role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ssp.person')),
            ],
        ),
        migrations.CreateModel(
            name='system_service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_id', models.CharField(max_length=100)),
                ('service_title', models.CharField(max_length=100)),
                ('service_description', models.CharField(max_length=100)),
                ('service_purpose', ssp.models.customTextField()),
                ('remarks', ssp.models.customTextField()),
                ('annotations', ssp.models.customMany2ManyField(blank=True, to='ssp.annotation')),
                ('links', ssp.models.customMany2ManyField(blank=True, to='ssp.link')),
                ('properties', ssp.models.customMany2ManyField(blank=True, to='ssp.element_property')),
                ('protocols', ssp.models.customMany2ManyField(blank=True, to='ssp.protocol')),
                ('service_information_types', ssp.models.customMany2ManyField(blank=True, to='ssp.system_information_type')),
            ],
        ),
        migrations.CreateModel(
            name='system_security_plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sspID', models.CharField(max_length=25)),
                ('title', models.CharField(max_length=100)),
                ('published', models.DateTimeField()),
                ('lastModified', models.DateTimeField()),
                ('version', models.CharField(default='1.0.0', max_length=25)),
                ('oscalVersion', models.CharField(default='1.0.0', max_length=10)),
                ('remarks', ssp.models.customTextField()),
                ('control_groups', ssp.models.customMany2ManyField(blank=True, to='ssp.system_control_group')),
                ('controls', ssp.models.customMany2ManyField(blank=True, to='ssp.system_control')),
                ('links', ssp.models.customMany2ManyField(blank=True, to='ssp.link')),
                ('properties', ssp.models.customMany2ManyField(blank=True, to='ssp.element_property')),
                ('system_characteristics', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ssp.system_characteristic')),
                ('system_components', ssp.models.customMany2ManyField(blank=True, to='ssp.system_component')),
                ('system_interconnections', ssp.models.customMany2ManyField(blank=True, to='ssp.system_interconnection')),
                ('system_inventory_items', ssp.models.customMany2ManyField(blank=True, to='ssp.system_inventory_item')),
                ('system_services', ssp.models.customMany2ManyField(blank=True, to='ssp.system_service')),
                ('system_users', ssp.models.customMany2ManyField(blank=True, to='ssp.system_user')),
            ],
        ),
        migrations.AddField(
            model_name='system_interconnection',
            name='interconnection_responsible_roles',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.user_role'),
        ),
        migrations.AddField(
            model_name='system_interconnection',
            name='links',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.link'),
        ),
        migrations.AddField(
            model_name='system_interconnection',
            name='properties',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.element_property'),
        ),
        migrations.AddField(
            model_name='system_control',
            name='control_responsible_roles',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.user_role'),
        ),
        migrations.AddField(
            model_name='system_control',
            name='control_statements',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.control_statement'),
        ),
        migrations.AddField(
            model_name='system_control',
            name='links',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.link'),
        ),
        migrations.AddField(
            model_name='system_control',
            name='nist_control',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='ssp.nist_control'),
        ),
        migrations.AddField(
            model_name='system_control',
            name='properties',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.element_property'),
        ),
        migrations.AddField(
            model_name='system_component',
            name='component_information_types',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.system_information_type'),
        ),
        migrations.AddField(
            model_name='system_component',
            name='component_responsible_roles',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.user_role'),
        ),
        migrations.AddField(
            model_name='system_component',
            name='component_status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='ssp.status'),
        ),
        migrations.AddField(
            model_name='system_component',
            name='links',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.link'),
        ),
        migrations.AddField(
            model_name='system_component',
            name='properties',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.element_property'),
        ),
        migrations.AddField(
            model_name='system_characteristic',
            name='system_information',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.system_information_type'),
        ),
        migrations.AddField(
            model_name='system_characteristic',
            name='system_status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='ssp.status'),
        ),
        migrations.AddField(
            model_name='person',
            name='telephone_numbers',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.telephone_number'),
        ),
        migrations.AddField(
            model_name='organization',
            name='telephone_numbers',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.telephone_number'),
        ),
        migrations.AddField(
            model_name='nist_control',
            name='control_statements',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.nist_control_statement'),
        ),
        migrations.AddField(
            model_name='nist_control',
            name='links',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.link'),
        ),
        migrations.AddField(
            model_name='nist_control',
            name='parameters',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.nist_control_parameter'),
        ),
        migrations.AddField(
            model_name='location',
            name='telephoneNumbers',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.telephone_number'),
        ),
        migrations.AddField(
            model_name='leveraged_authorization',
            name='link_to_SSP',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ssp.link'),
        ),
        migrations.AddField(
            model_name='inventory_item_type',
            name='baseline_configuration',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='baseline_configuration', to='ssp.link'),
        ),
        migrations.AddField(
            model_name='inventory_item_type',
            name='links',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.link'),
        ),
        migrations.AddField(
            model_name='inventory_item_type',
            name='properties',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.element_property'),
        ),
        migrations.AddField(
            model_name='inventory_item_type',
            name='responsibleRoles',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.user_role'),
        ),
        migrations.AddField(
            model_name='control_statement',
            name='control_statement_responsible_roles',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.user_role'),
        ),
        migrations.AddField(
            model_name='control_statement',
            name='links',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.link'),
        ),
        migrations.AddField(
            model_name='control_statement',
            name='properties',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.element_property'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='hash',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='ssp.hashed_value'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='links',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.link'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='properties',
            field=ssp.models.customMany2ManyField(blank=True, to='ssp.element_property'),
        ),
    ]
