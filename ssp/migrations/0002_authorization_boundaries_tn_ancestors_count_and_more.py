# Generated by Django 4.1 on 2022-08-27 02:13

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('ssp', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='authorization_boundaries',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='authorization_boundaries',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='authorization_boundaries',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='authorization_boundaries',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='authorization_boundaries',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='authorization_boundaries',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='authorization_boundaries',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='authorization_boundaries',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='authorization_boundaries',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='authorization_boundaries',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='authorization_boundaries',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='ssp.authorization_boundaries', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='authorization_boundaries',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='authorization_boundaries',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='authorization_boundaries',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='categorizations',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='categorizations',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='categorizations',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='categorizations',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='categorizations',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='categorizations',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='categorizations',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='categorizations',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='categorizations',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='categorizations',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='categorizations',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='ssp.categorizations', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='categorizations',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='categorizations',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='categorizations',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='data_flows',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='data_flows',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='data_flows',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='data_flows',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='data_flows',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='data_flows',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='data_flows',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='data_flows',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='data_flows',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='data_flows',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='data_flows',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='ssp.data_flows', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='data_flows',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='data_flows',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='data_flows',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='diagrams',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='diagrams',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='diagrams',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='diagrams',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='diagrams',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='diagrams',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='diagrams',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='diagrams',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='diagrams',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='diagrams',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='diagrams',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='ssp.diagrams', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='diagrams',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='diagrams',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='diagrams',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='import_profiles',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='import_profiles',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='import_profiles',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='import_profiles',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='import_profiles',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='import_profiles',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='import_profiles',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='import_profiles',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='import_profiles',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='import_profiles',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='import_profiles',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='ssp.import_profiles', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='import_profiles',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='import_profiles',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='import_profiles',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='information_type_ids',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='information_type_ids',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='information_type_ids',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='information_type_ids',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='information_type_ids',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='information_type_ids',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='information_type_ids',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='information_type_ids',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='information_type_ids',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='information_type_ids',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='information_type_ids',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='ssp.information_type_ids', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='information_type_ids',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='information_type_ids',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='information_type_ids',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='information_type_impact_level',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='information_type_impact_level',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='information_type_impact_level',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='information_type_impact_level',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='information_type_impact_level',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='information_type_impact_level',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='information_type_impact_level',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='information_type_impact_level',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='information_type_impact_level',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='information_type_impact_level',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='information_type_impact_level',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='ssp.information_type_impact_level', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='information_type_impact_level',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='information_type_impact_level',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='information_type_impact_level',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='information_types',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='information_types',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='information_types',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='information_types',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='information_types',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='information_types',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='information_types',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='information_types',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='information_types',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='information_types',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='information_types',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='ssp.information_types', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='information_types',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='information_types',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='information_types',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='inventory_items',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='inventory_items',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='inventory_items',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='inventory_items',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='inventory_items',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='inventory_items',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='inventory_items',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='inventory_items',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='inventory_items',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='inventory_items',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='inventory_items',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='ssp.inventory_items', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='inventory_items',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='inventory_items',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='inventory_items',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='leveraged_authorizations',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='leveraged_authorizations',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='leveraged_authorizations',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='leveraged_authorizations',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='leveraged_authorizations',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='leveraged_authorizations',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='leveraged_authorizations',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='leveraged_authorizations',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='leveraged_authorizations',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='leveraged_authorizations',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='leveraged_authorizations',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='ssp.leveraged_authorizations', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='leveraged_authorizations',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='leveraged_authorizations',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='leveraged_authorizations',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='network_architectures',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='network_architectures',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='network_architectures',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='network_architectures',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='network_architectures',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='network_architectures',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='network_architectures',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='network_architectures',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='network_architectures',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='network_architectures',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='network_architectures',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='ssp.network_architectures', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='network_architectures',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='network_architectures',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='network_architectures',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='privileges',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='privileges',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='privileges',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='privileges',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='privileges',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='privileges',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='privileges',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='privileges',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='privileges',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='privileges',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='privileges',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='ssp.privileges', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='privileges',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='privileges',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='privileges',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='system_characteristics',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='system_characteristics',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='system_characteristics',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='system_characteristics',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='system_characteristics',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='system_characteristics',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='system_characteristics',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='system_characteristics',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='system_characteristics',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='system_characteristics',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='system_characteristics',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='ssp.system_characteristics', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='system_characteristics',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='system_characteristics',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='system_characteristics',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='system_functions',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='system_functions',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='system_functions',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='system_functions',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='system_functions',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='system_functions',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='system_functions',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='system_functions',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='system_functions',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='system_functions',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='system_functions',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='ssp.system_functions', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='system_functions',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='system_functions',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='system_functions',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='system_ids',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='system_ids',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='system_ids',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='system_ids',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='system_ids',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='system_ids',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='system_ids',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='system_ids',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='system_ids',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='system_ids',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='system_ids',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='ssp.system_ids', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='system_ids',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='system_ids',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='system_ids',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='system_implementations',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='system_implementations',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='system_implementations',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='system_implementations',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='system_implementations',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='system_implementations',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='system_implementations',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='system_implementations',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='system_implementations',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='system_implementations',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='system_implementations',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='ssp.system_implementations', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='system_implementations',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='system_implementations',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='system_implementations',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='system_security_plans',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='system_security_plans',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='system_security_plans',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='system_security_plans',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='system_security_plans',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='system_security_plans',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='system_security_plans',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='system_security_plans',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='system_security_plans',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='system_security_plans',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='system_security_plans',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='ssp.system_security_plans', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='system_security_plans',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='system_security_plans',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='system_security_plans',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='systems_information',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='systems_information',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='systems_information',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='systems_information',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='systems_information',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='systems_information',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='systems_information',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='systems_information',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='systems_information',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='systems_information',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='systems_information',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='ssp.systems_information', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='systems_information',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='systems_information',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='systems_information',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
        migrations.AddField(
            model_name='users',
            name='tn_ancestors_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count'),
        ),
        migrations.AddField(
            model_name='users',
            name='tn_ancestors_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks'),
        ),
        migrations.AddField(
            model_name='users',
            name='tn_children_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count'),
        ),
        migrations.AddField(
            model_name='users',
            name='tn_children_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Children pks'),
        ),
        migrations.AddField(
            model_name='users',
            name='tn_depth',
            field=models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth'),
        ),
        migrations.AddField(
            model_name='users',
            name='tn_descendants_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count'),
        ),
        migrations.AddField(
            model_name='users',
            name='tn_descendants_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks'),
        ),
        migrations.AddField(
            model_name='users',
            name='tn_index',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Index'),
        ),
        migrations.AddField(
            model_name='users',
            name='tn_level',
            field=models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='users',
            name='tn_order',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='users',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='ssp.users', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='users',
            name='tn_priority',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority'),
        ),
        migrations.AddField(
            model_name='users',
            name='tn_siblings_count',
            field=models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count'),
        ),
        migrations.AddField(
            model_name='users',
            name='tn_siblings_pks',
            field=models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks'),
        ),
    ]
