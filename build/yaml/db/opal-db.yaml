apiVersion: apps/v1
kind: Deployment
metadata:
  name: opal-postgres-db
  namespace: opal
  labels:
    app: opal-postgres-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opal-postgres-db
  template:
    metadata:
      labels:
        app: opal-postgres-db
    spec:
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: postgres-pvc
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      imagePullSecrets:
        - name: harbor
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: DoesNotExist
      containers:
        - name: opal-postgres-db
          image: 192.168.42.100:5050/opal-db
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 999
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          ports:
            - containerPort: 5432
              name: 5432tcp
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db-data
          env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: POSTGRES_PASSWORD
                name: opal-passwords
          - name: POSTGRES_OPAL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: POSTGRES_OPAL_PASSWORD
                name: opal-passwords
          - name: PGDATA
            value: /var/lib/postgresql/data/opal





      