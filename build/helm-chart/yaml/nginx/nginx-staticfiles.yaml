apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-static
  namespace: {{ .Values.namespace | quote }}
  labels:
    app: nginx-static
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-static
  template:
    metadata:
      labels:
        app: nginx-static
    spec:
      volumes:
        - name: nginx
          configMap:
            name: nginx-cm
        - name: staticfiles
          persistentVolumeClaim:
            claimName: staticfiles-pvc
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      imagePullSecrets:
        - name: harbor
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
      containers:
        - name: nginx-static
          image: {{ .Values.repo.nginx }}
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 999
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          ports:
            - containerPort: 80
              name: 80tcp
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
              name: nginx
              readOnly: true
            - mountPath: "/data/static"
              name: staticfiles
      