{
    "id": "sa-17.3",
    "class": "SP800-53-enhancement",
    "title": "Formal Correspondence",
    "properties": [
        {
            "name": "label",
            "value": "SA-17(3)"
        },
        {
            "name": "sort-id",
            "value": "SA-17(03)"
        }
    ],
    "links": [
        {
            "href": "#ac-3",
            "rel": "related",
            "text": "AC-3"
        },
        {
            "href": "#ac-4",
            "rel": "related",
            "text": "AC-4"
        },
        {
            "href": "#ac-25",
            "rel": "related",
            "text": "AC-25"
        },
        {
            "href": "#sa-4",
            "rel": "related",
            "text": "SA-4"
        },
        {
            "href": "#sa-5",
            "rel": "related",
            "text": "SA-5"
        }
    ],
    "parts": [
        {
            "id": "sa-17.3_smt",
            "name": "statement",
            "prose": "Require the developer of the system, system component, or system service to:",
            "parts": [
                {
                    "id": "sa-17.3_smt.a",
                    "name": "item",
                    "properties": [
                        {
                            "name": "label",
                            "value": "(a)"
                        }
                    ],
                    "prose": "Produce, as an integral part of the development process, a formal top-level specification that specifies the interfaces to security-relevant hardware, software, and firmware in terms of exceptions, error messages, and effects;"
                },
                {
                    "id": "sa-17.3_smt.b",
                    "name": "item",
                    "properties": [
                        {
                            "name": "label",
                            "value": "(b)"
                        }
                    ],
                    "prose": "Show via proof to the extent feasible with additional informal demonstration as necessary, that the formal top-level specification is consistent with the formal policy model;"
                },
                {
                    "id": "sa-17.3_smt.c",
                    "name": "item",
                    "properties": [
                        {
                            "name": "label",
                            "value": "(c)"
                        }
                    ],
                    "prose": "Show via informal demonstration, that the formal top-level specification completely covers the interfaces to security-relevant hardware, software, and firmware;"
                },
                {
                    "id": "sa-17.3_smt.d",
                    "name": "item",
                    "properties": [
                        {
                            "name": "label",
                            "value": "(d)"
                        }
                    ],
                    "prose": "Show that the formal top-level specification is an accurate description of the implemented security-relevant hardware, software, and firmware; and"
                },
                {
                    "id": "sa-17.3_smt.e",
                    "name": "item",
                    "properties": [
                        {
                            "name": "label",
                            "value": "(e)"
                        }
                    ],
                    "prose": "Describe the security-relevant hardware, software, and firmware mechanisms not addressed in the formal top-level specification but strictly internal to the security-relevant hardware, software, and firmware."
                }
            ]
        },
        {
            "id": "sa-17.3_gdn",
            "name": "guidance",
            "prose": "Correspondence is an important part of the assurance gained through modeling. It demonstrates that the implementation is an accurate transformation of the model, and that any additional code or implementation details that are present have no impact on the behaviors or policies being modeled. Formal methods can be used to show that the high-level security properties are satisfied by the formal system description, and that the formal system description is correctly implemented by a description of some lower level, including a hardware description. Consistency between the formal top-level specification and the formal policy models is generally not amenable to being fully proven. Therefore, a combination of formal and informal methods may be needed to demonstrate such consistency. Consistency between the formal top-level specification and the actual implementation may require the use of an informal demonstration due to limitations on the applicability of formal methods to prove that the specification accurately reflects the implementation. Hardware, software, and firmware mechanisms internal to security-relevant components include mapping registers and direct memory input and output."
        }
    ],
    "group_title": "System and Services Acquisition"
}